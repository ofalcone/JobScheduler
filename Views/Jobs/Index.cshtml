@model IEnumerable<JobScheduler.Models.Job>

@{
    ViewData["Title"] = nameof(Job); ;
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Path)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Orario)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Path)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Orario)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                @Html.ActionLink("Launch", "Launch", "Jobs", new { Id = item.Id, Orario = item.Orario, Path = item.Path }, null) |
                @* TODO: Mostrare lo stop solo se Job is running *@
                @Html.ActionLink("Stop", "Stop", "Jobs", new { Id = item.Id }, null)
                @*<a asp-action="Launch" asp-all-route-data="" @Html.Action("Update me!", "Update",new {Id=item.Id,Orario=item.Orario})>Launch</a>*@
            </td>
        </tr>
        }
    </tbody>
</table>
